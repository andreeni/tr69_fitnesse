Test TR69F.1.6:    GetParameterValues 

!4 Purpose:
    This test is designed to verify that the DUT can perform a GetParameterValues function when 
the entire device object model is requested. 

!4 References:
 
         [1]        Broadband Forum TR-069 
         [2]       Broadband Forum Technical Report 106 (TR-106) Amendment 2, "Data Model Template 
                  for TR-069-Enabled Devices " 
         [3]        Broadband Forum Technical Report 098 (TR-098) Amendment 1, "Internet Gateway 
                  Device Data Model for TR-069" 

!4 Resource Requirements:
 
         -    CPE (DUT) 
         -    CWMP Generator/Analyzer 

!4 Test setup:
 
         -    Test Setup 1 

!4 Discussion:
 
         According to [1], the GetParameterValues method is a required function on the CPE.       The ACS 
may use this method to learn the particular parameters and their current values that exist on the CPE. 
         The ACS makes this procedure call with two arguments.       The first is the ParameterPath, which 
indicates the path in the object hierarchy under which the ACS wishes to learn the names of supported 
parameters.  This path may be "complete", in which the specific parameter is named to determine if it is 
available, or "partial", in which all of an objects lower level parameters are returned. 
         When the ACS sends a GetParameteValues procedure call containing a ParameterPath argument 
that points to the root device object (for example, InternetGatewayDevice. or Device. depending on the 
device type and data model used), the CPE responds with its entire object model.     A CPE MAY instead 
respond with a resources exceeded fault (Fault 9004) in this circumstance. 
         The GetParameterValuesResponse from the CPE contains one argument.           This is ParameterList, 
which is an array of ParameterValueStruct structures, each containing the name of the parameter (Name), 
and its current value (Value). 
         This test is designed to verify that the DUT can perform this operation without error.   An 
additional step is added to validate the XML sent by the DUT to ensure that an ACS that correctly 
interprets CWMP messages will understand the message sent by the DUT. 

!4 Procedure:
 
     1.    Establish a network layer connection between the CPE and the CWMP Generator/Analyzer. 
     2.   Stimulate the DUT to initiate a CWMP session with the CWMP Generator/Analyzer. 
     3.   Schedule a GetParameterValues call on the DUT with the following arguments: 
              a.    ParameterPath = InternetGatewayDevice. or Device. 
     4.   Allow the DUT to send a GetParameterNamesResponse or return a Resources Exceeded fault 
         (Fault 9004). 
     5.   Allow the session to terminate successfully. 
     6.   Validate the GetParameterNamesResponse. 

!4 Test Metrics:
 
     1.    The DUT returns the parameter names and values of all parameters in its data hierarchy through 
         the GetParameterValuesResponse. 
     2.   The GetParameterNamesResponse XML is valid. 
     3.   All sessions are terminated successfully. 

!4 Possible Problems:
 
     1.   The GetParameterValuesResponse is often used by the ACS to learn the current data hierarchy of 
         the CPE.  However, if certain objects do not have active instances in the CPE, the underlying 
         parameters may not be reported.   This test is designed to verify the basic functionality of the 
         GetParameterValues RPC and not its use by an ACS in discovering device capabilities. 
